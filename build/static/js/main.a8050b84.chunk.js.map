{"version":3,"sources":["serviceWorker.js","component/like.jsx","component/moviedisplay.jsx","component/movies.jsx","component/pagination.jsx","component/display.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Like","classes","this","props","property","style","cursor","onClick","className","aria-hidden","Component","Moviedisplay","movies","dolike","dodelete","Sort","scope","map","e","key","id","name","rating","like","Movies","Pagination","length","size","currentPage","NumPage","Math","ceil","page","_","range","Fragment","display","justifyContent","alignItems","aria-label","to","handlePageChange","Display","state","prev","next","sortColumn","path","order","sort","setState","delete","m","filter","handlelike","c","index","indexOf","mo","orderBy","slice","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a8050b84.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\nexport default class Like extends Component {\r\n    render() { \r\n       let classes= this.props.property===true? \"fa fa-heart\" : \"fa fa-heart-o\";\r\n        return  <i style={{cursor: \"pointer\"}} onClick={this.props.onClick} className={classes} aria-hidden=\"true\"></i> ;\r\n    }\r\n}\r\n ","import React from 'react';\r\nimport Like from './like';\r\n\r\nconst Moviedisplay = (props) => {\r\n\r\n    const {movies, dolike, dodelete,Sort }=props;\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n        <table className=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th onClick={()=> Sort('id')} style={{cursor:'pointer'}} scope=\"col\">Id</th>\r\n      <th onClick={()=> Sort('name')} style={{cursor:'pointer'}} scope=\"col\">Name</th>\r\n      <th onClick={()=> Sort('rating')} style={{cursor:'pointer'}} scope=\"col\">Rating</th>\r\n      <th style={{cursor:'pointer'}} scope=\"col\">Like</th>\r\n      <th style={{cursor:'pointer'}} scope=\"col\">Delete</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {movies.map(e=> (\r\n        <tr key={e.id}>\r\n        <th scope=\"row\">{e.id}</th>\r\n        <td>{e.name}</td>\r\n        <td>{e.rating}</td>\r\n    <td><Like property={e.like} onClick={()=> dolike(e)} /></td>\r\n        <td><button onClick={()=> dodelete(e.id)} className=\"btn btn-danger btn-sm\">Delete</button></td>\r\n      </tr>\r\n    ))}\r\n  </tbody>\r\n</table>\r\n</div>\r\n     );\r\n}\r\n \r\nexport default Moviedisplay;","const movies=[\r\n    { \r\n        id:1,\r\n        name:\"Iron Man 1\",\r\n        rating:\"9.5\",\r\n        like: false\r\n    },\r\n    { \r\n        id:2,\r\n        name:\"Iron Man 2\",\r\n        rating:\"8.5\",\r\n        like: false\r\n    },\r\n    { \r\n        id:3,\r\n        name:\"Iron Man 3\",\r\n        rating:\"9.0\",\r\n        like: false\r\n    },\r\n    { \r\n        id:4,\r\n        name:\"Captain America\",\r\n        rating:\"7.5\",\r\n        like: false\r\n    },\r\n    { \r\n        id:5,\r\n        name:\"Thor\",\r\n        rating:\"8.0\",\r\n        like: false\r\n    },\r\n    { \r\n        id:6,\r\n        name:\"Avengers\",\r\n        rating:\"9.5\",\r\n        like: false\r\n    },\r\n    { \r\n        id:7,\r\n        name:\"Avengers 2\",\r\n        rating:\"9.0\",\r\n        like: false\r\n    },\r\n    { \r\n        id:8,\r\n        name:\"Avengers 3\",\r\n        rating:\"8.0\",\r\n        like: false\r\n    },\r\n    { \r\n        id:9,\r\n        name:\"Captain Marvel\",\r\n        rating:\"9.5\",\r\n        like: false\r\n    },\r\n    {\r\n        id:10,\r\n        name:\"Black Widow\",\r\n        rating:\"8.5\",\r\n        like: false\r\n    }\r\n];\r\n\r\nexport default function Movies(){\r\n    return movies;\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Pagination = (props) => {\r\n    const {length,size,currentPage}=props;\r\n    let NumPage=Math.ceil((length/size)+1);\r\n    if(NumPage===1) return null;\r\n    const page=_.range(1,NumPage);\r\n    \r\n\r\n    return ( <React.Fragment>\r\n        <div className=\"container\" style={{display:\"flex\", justifyContent:\"center\",alignItems:\"center\"}}>\r\n        <nav aria-label=\"Page navigation example\">\r\n  <ul className=\"pagination\">\r\n    {page.map(e=> (<li key={e} style={{cursor:'pointer'}}  className={e===currentPage? \"page-item active\": \"page-item\"}><Link to=\"/\"  className=\"page-link\" onClick={()=>props.handlePageChange(e)}>{e}</Link></li>))}\r\n  </ul>\r\n</nav>\r\n</div>\r\n    </React.Fragment> );\r\n\r\n}\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport Moviedisplay from './moviedisplay';\r\nimport Movies from './movies';\r\nimport Pagination from './pagination';\r\nimport _ from 'lodash';\r\nexport default class Display extends Component {\r\n    state = { \r\n      movies:Movies(),\r\n      currentPage:1,\r\n      prev:0,\r\n      next:3,\r\n      size:3,\r\n      sortColumn:{path:'id', order: 'asc'}\r\n     }\r\n\r\n     sort=(e)=>{\r\n       const sortColumn={...this.state.sortColumn};\r\n       if(sortColumn.path===e)\r\n       sortColumn.order=(sortColumn.order === 'asc')? 'desc': 'asc';\r\n       else{\r\n         sortColumn.path=e;\r\n         sortColumn.order='asc';\r\n       }\r\n     this.setState({sortColumn});\r\n     }\r\n\r\n    delete=(m)=>{\r\n    const movies=this.state.movies.filter(e=> e.id!==m);\r\n    this.setState({movies});\r\n    }\r\n\r\n\r\n    handlelike= c=>{\r\n    const movies=[...this.state.movies];\r\n    const index=movies.indexOf(c);\r\n    movies[index]={...movies[index]};\r\n    movies[index].like=!movies[index].like;\r\n    this.setState({movies});\r\n    }\r\n\r\n    handlePageChange= page=>{\r\n      this.setState({currentPage:page,prev:page*this.state.size-3,next:page*this.state.size});\r\n    }\r\n\r\n    render() { \r\n      const {size,sortColumn,currentPage,movies:mo,prev,next}=this.state;\r\n      const sorted=_.orderBy(mo,[sortColumn.path],[sortColumn.order]);\r\n      const movies=sorted.slice(prev,next);\r\n    return ( <React.Fragment>\r\n        \r\n    <Moviedisplay \r\n    movies={movies} \r\n    dolike={this.handlelike} \r\n    dodelete={this.delete} \r\n    Sort={this.sort}\r\n    />\r\n\r\n    <Pagination \r\n    length={mo.length} \r\n    size={size} \r\n    currentPage={currentPage}\r\n    handlePageChange={this.handlePageChange}\r\n    />\r\n\r\n    </React.Fragment> );\r\n    }\r\n}\r\n \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Display from './component/display';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    nav className = \"navbar navbar-dark bg-primary\" >\n    <\n    span className = \"navbar-brand mb-0 h1\" > Movies List < /span> < /\n    nav > <\n\n    Display / >\n\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}